# Affero General Public License version 3
# @copyright nextcloud/news
name: Integration Tests
on:
  push:
    paths: '**.php'
  pull_request:
    paths: '**.php'
  workflow_dispatch:
env:
  DB_USER: root
  DB_PASSWORD: nc_test
  DATABASE: nc_test
  STORAGE_HOST: 127.0.0.1
jobs:
  integration:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    name: "Integration: Nextcloud ${{ matrix.nextcloud }} - PHP ${{ matrix.php-versions }} - DB ${{ matrix.database }}"
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ env.DATABASE }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mariadb:
         # Nextcloud Requires compressed tables which are not supported in 10.6 (nextcloud/server #25436)
        image: mariadb:10.5
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ env.DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
      mysql:
         # Nextcloud Requires compressed tables which are not supported in 10.6 (nextcloud/server #25436)
        image: chrros95/mysql
        ports:
          - 3307:3306
        env:
          MYSQL_DATABASE: ${{ env.DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          AUTH_PLUGIN: mysql_native_password
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      external-storage:
        image: chrros95/external-storage-test
        ports:
            - 20:20
            - 21:21
            - 80:80
            - 139:139
            - 445:445
            - 30000-30200:30000-30200
    strategy:
      matrix:
        php-versions: ['7.3', '7.4']
        nextcloud: ['stable20', 'stable21', 'stable22']
        database: ['sqlite', 'pgsql', 'mysql','mariadb']
        experimental: [false]
        include:
          - php-versions: 7.4
            nextcloud: pre-release
            database: sqlite
            experimental: true
          - php-versions: 8.0
            nextcloud: pre-release
            database: sqlite
            experimental: true
          - database: pgsql
            dbport: 5432
          - database: mariadb
            dbtype: mysql
          - database: mysql
            dbport: 3307
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install additional software
        run: |
          sudo apt-get update
          sudo apt-get install smbclient
          sudo sed -i '/workgroup/ i\ client min protocol = NT1' /etc/samba/smb.conf
          sudo sed -i '/workgroup/ i\ client max protocol = NT1' /etc/samba/smb.conf
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo_sqlite,pdo_mysql,pdo_pgsql,gd,zip
          coverage: none
      - name: Setup BATS
        uses: mig4/setup-bats@v1
      - name: Set up server
        uses: SMillerDev/nextcloud-actions/setup-nextcloud@main
        with:
          version: ${{ matrix.nextcloud }}
          cron: true
          database-type: ${{ matrix.dbtype || matrix.database }}
          database-host: 127.0.0.1
          database-port: ${{ matrix.dbport || 3306 }}
          database-name: ${{ env.DATABASE }}
          database-user: ${{ env.DB_USER }}
          database-password: ${{ env.DB_PASSWORD }}
      - name: Prime app build
        run: make
      - name: Configure server with app
        uses: SMillerDev/nextcloud-actions/setup-nextcloud-app@main
        with:
          app: 'duplicatefinder'
          check-code: true
          force: ${{ matrix.experimental }}
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
      - name: Functional tests maintenance
        working-directory: ../server
        run: ./occ maintenance:repair
      - name: Allow that remote servers are on the local host
        working-directory: ../server
        run: ./occ config:system:set --value=true --type=boolean allow_local_remote_servers
      - name: Functional tests
        working-directory: ../server
        run: bats apps/duplicatefinder/tests/bats
        env:
            DB_TYPE: ${{ matrix.dbtype || matrix.database }}
            DB_PORT: ${{ matrix.dbport || 3306 }}
